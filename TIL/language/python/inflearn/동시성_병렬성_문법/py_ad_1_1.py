'''
SECTION 1
Multithreading - Difference between Process and Thread
Keyword - Process, thread
'''

'''
(1) 프로세스
    - 운영체제 -> 할당 받는 자원 단위(실행중인 프로그램)
    - CPU 동작시간, 주소공간(독립적)
    !- Code, Data, Stack, Heap -> 독립적!
    - 최소 1개의 메인 스레드 보유
    - 파이프, 파일, 소켓 등을 사용해서 프로세스간 통신이 가능하다(비용이 높다) -> context Switching
    
(2) 스레드
    - 프로세스 내에 실행 흐름 단위
    - 프로세스 자원 사용
    !- Stack만 별도 할당, 나머지는 공유(Code, Data, Heap)
    - 한 스레드의 결과가 다른 스레드의 영향을 끼친다.
    - 동기화 문제는 정말 주의(!디버깅이 어렵다)

(3) 멀티 스레드
    - 한 개의 단일 어플리케이션(응용프로그램) -> 여러 스레드로 구성 후 작업 처리
    - 시스템 자원 소모 감소(효율성), 처리량 증가(Cost 약간 감소)
    - 통신 부담이 감소, 디버깅은 어렵다, 단일 프로세스에는 효과가 미약하다(좋은 성능의 cpu가 많이 나왔기 때문), 자원 공유 문제(교착 상태), 프로세스 영향을 준다.
    
(4) 멀티 프로세스
    - 한 개의 단일 어플리케이션(응용프로그램) -> 여렆로세스 구성 후 작업처리
    - 한 개의 프로세스 문제 발생은 확산이 없다.(프로세스 kill)
    - 캐시 체인지, Cost 비용이 매우 높다.(오버헤드 상승) 왜? 복잡한 통신 방식을 사용하기 때문이다.
    - 
'''